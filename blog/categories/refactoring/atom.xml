<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: refactoring | Chamnap Chhorn]]></title>
  <link href="http://chamnap.github.com/blog/categories/refactoring/atom.xml" rel="self"/>
  <link href="http://chamnap.github.com/"/>
  <updated>2012-06-04T11:07:28+07:00</updated>
  <id>http://chamnap.github.com/</id>
  <author>
    <name><![CDATA[Chamnap Chhorn]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reduce If/Else Statements]]></title>
    <link href="http://chamnap.github.com/blog/2012/05/27/reduce-if-else-statements/"/>
    <updated>2012-05-27T23:35:00+07:00</updated>
    <id>http://chamnap.github.com/blog/2012/05/27/reduce-if-else-statements</id>
    <content type="html"><![CDATA[<p>In the new project, we have built recently at <code>Yoolk</code>. I really enjoyed a lot of refactoring the app.</p>

<p>There are things which always bother me a lot is the <code>if/else</code> statements. I see them all the time. In my views, <code>if/else</code> should be used at the low level of coding. We should not use them too much because it doesn't make the code readable.</p>

<p>I remembered vorleak, my coworker, and I are moderators in a study group long time ago about <a href="http://chamnap.github.com/blog/2009/09/05/principles-in-refactoring/">Principles of Refacoring</a>. Two principles that really inspires me quite alot: <strong>less code == less bugs</strong> and <strong>write code for human, not for machine</strong>.</p>

<p>It looks simple to experienced <code>Rails</code> developers, but it's useful for novice people. Here are some tips to reduce <code>if/else</code> statements:</p>

<ul>
<li>Use <code>find_or_initialize_by</code>, <code>find_or_create_by</code> method</li>
</ul>


<p>As the method name, it's a cleaner way to get/create objects without <code>if/else</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;A shorter version&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_or_initialize_by</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user_name</span><span class="o">]</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;A longer version with if statement&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">find_by_user_name</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:user_name</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">User</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:user_name</span> <span class="o">=&gt;</span> <span class="n">params</span><span class="o">[</span><span class="ss">:user_name</span><span class="o">]</span><span class="p">)</span> <span class="k">if</span> <span class="n">user</span><span class="o">.</span><span class="n">nil?</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Be sure to check more about these methods if you didn't know on <a href="http://api.rubyonrails.org/classes/ActiveRecord/Base.html">http://api.rubyonrails.org/classes/ActiveRecord/Base.html</a> in the <strong>Dynamic attribute-based finders</strong> section.</p>

<ul>
<li>Use <code>try</code> for possible nil object</li>
</ul>


<p>Invoke <code>try</code> for object that could be nil. It's more convienient than doing a check by yourself.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Without try&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="vi">@person</span> <span class="p">?</span> <span class="vi">@person</span><span class="o">.</span><span class="n">name</span> <span class="p">:</span> <span class="kp">nil</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;With try&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="vi">@person</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>However, don't confuse with the below situation.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Don&#39;t invoke try with non-existed methods&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="vi">@person</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:abcde</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;Call respond_to instead&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="vi">@person</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:abcde</span><span class="p">)</span> <span class="p">?</span> <span class="n">t</span><span class="o">.</span><span class="n">abcde</span> <span class="p">:</span> <span class="s2">&quot;&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><code>Try</code> also be called with block as well so that you can call multiple methods in a scope of try.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@person</span><span class="o">.</span><span class="n">try</span> <span class="p">{</span> <span class="o">|</span><span class="nb">p</span><span class="o">|</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">first_name</span><span class="si">}</span><span class="s2"> </span><span class="si">#{</span><span class="nb">p</span><span class="o">.</span><span class="n">last_name</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Check this document, <a href="http://api.rubyonrails.org/classes/Object.html#method-i-try">http://api.rubyonrails.org/classes/Object.html#method-i-try</a> as well.</p>

<ul>
<li>Use <code>||</code> operator + <code>presence</code> method</li>
</ul>


<p>The <code>||</code> is a common idiom in Ruby. However, it doesn't work well if the first operand is empty string. The <code>presence</code> method will return nil instead of "" if the object is `blank?``, otherwise it return the actual object back.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">host</span> <span class="o">=</span> <span class="n">config</span><span class="o">[</span><span class="ss">:host</span><span class="o">].</span><span class="n">presence</span> <span class="o">||</span> <span class="s1">&#39;localhost&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>Use default value</li>
</ul>


<p>Use default value so that you don't else clause.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;should do this way, it&#39;s more readable.&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">subscription</span> <span class="o">=</span> <span class="s1">&#39;normal&#39;</span>
</span><span class='line'><span class="n">subscription</span> <span class="o">=</span> <span class="s1">&#39;premium&#39;</span> <span class="k">if</span> <span class="n">condition</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li>Keep the if/else logic in fewer places</li>
</ul>


<p>Wrap them in a function and reuse it where it is possible. Sometimes, it 's hard to extract it into function because they are slightly different. Try to write in general context, think about its behavior, and make it fit.</p>

<p>If you feel you are doing too much <code>if/else</code>, go back one step why you are doing that way. Try to use the correct objects that fit to your scenarios.</p>

<p>Here is my coworker's version generating the last 12 months stats. He manipulates the <code>string</code> object.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">last_twelve_months</span>
</span><span class='line'>  <span class="n">default_value</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&quot;views&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;website_clicks&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;email_clicks&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;billboard_clicks&quot;</span><span class="o">=&gt;</span><span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;sponsor_views&quot;</span> <span class="o">=&gt;</span><span class="mi">0</span><span class="p">}</span>
</span><span class='line'>  <span class="n">current_month</span> <span class="o">=</span> <span class="no">Date</span><span class="o">.</span><span class="n">yesterday</span><span class="o">.</span><span class="n">month</span>
</span><span class='line'>  <span class="n">twelve_months</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="p">(</span><span class="mi">1</span><span class="o">.</span><span class="n">.</span><span class="mi">12</span><span class="p">)</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;month = current_month - i</span>
</span><span class='line'><span class="sr">if month &amp;gt; 0</span>
</span><span class='line'><span class="sr">  yearmonth = Date.yesterday.year.to_s + (&quot;%02d&quot; % month)</span>
</span><span class='line'><span class="sr">elsif month == 0</span>
</span><span class='line'><span class="sr">  yearmonth = Date.yesterday.year.to_s + (&quot;%02d&quot; % current_month)</span>
</span><span class='line'><span class="sr">else</span>
</span><span class='line'><span class="sr">  month = month + 13</span>
</span><span class='line'><span class="sr">  yearmonth = (Date.yesterday.year - 1).to_s + (&quot;%02d&quot; % month)</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">twelve_months[yearmonth] = self.yearmonths[yearmonth].blank? ? default_value : self.yearmonths[yearmonth]</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="no">Hash</span><span class="o">[</span><span class="n">twelve_months</span><span class="o">.</span><span class="n">sort_by</span> <span class="p">{</span><span class="o">|</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="o">|</span> <span class="n">k</span><span class="o">.</span><span class="n">to_i</span><span class="p">}</span><span class="o">.</span><span class="n">last</span><span class="p">(</span><span class="mi">12</span><span class="p">)</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">resolve_language</span>
</span><span class='line'>  <span class="n">language_uuid</span> <span class="o">=</span> <span class="n">cookies</span><span class="o">[</span><span class="s2">&quot;language_uuid&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="vi">@active_language</span> <span class="o">=</span> <span class="k">if</span> <span class="n">language_uuid</span> <span class="ow">and</span> <span class="vi">@portal</span><span class="o">.</span><span class="n">languages</span><span class="o">.</span><span class="n">collect</span><span class="p">(</span><span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="ss">:uuid</span><span class="p">)</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">language_uuid</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@portal.languages.find(language_uuid)</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  else&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="vi">@portal</span><span class="o">.</span><span class="n">language</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  I18n.locale = @active_language.two_code</span>
</span><span class='line'><span class="sr">  @inactive_languages = @portal.languages.select {|language| language.uuid != @active_language.uuid}</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Here, it's my version, much shorter and less code.
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">last_year</span>
</span><span class='line'>  <span class="k">return</span> <span class="vi">@last_year</span> <span class="k">if</span> <span class="vi">@last_year</span><span class="o">.</span><span class="n">present?</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  defaults = Hash.new</span>
</span><span class='line'><span class="sr">  12.downto(1).each do |i|&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">date</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">months</span><span class="o">.</span><span class="n">ago</span>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">date</span><span class="o">.</span><span class="n">year</span><span class="si">}</span><span class="s2">%02d&quot;</span> <span class="o">%</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">date</span><span class="o">.</span><span class="n">month</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="n">defaults</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">=</span> <span class="p">{</span> <span class="s2">&quot;views&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;website_clicks&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;email_clicks&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span><span class="p">,</span> <span class="s2">&quot;billboard_clicks&quot;</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="mi">0</span> <span class="p">}</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'>  <span class="n">existings</span> <span class="o">=</span> <span class="n">yearmonths</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="p">,</span> <span class="n">v</span><span class="o">|</span> <span class="n">defaults</span><span class="o">.</span><span class="n">key?</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="vi">@last_year</span> <span class="o">=</span> <span class="n">defaults</span><span class="o">.</span><span class="n">merge</span><span class="p">(</span><span class="n">existings</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">resolve_language</span>
</span><span class='line'>  <span class="n">language_uuid</span> <span class="o">=</span> <span class="n">cookies</span><span class="o">[</span><span class="s2">&quot;language_uuid&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="vi">@language</span>     <span class="o">=</span> <span class="vi">@portal</span><span class="o">.</span><span class="n">has_language?</span><span class="p">(</span><span class="n">language_uuid</span><span class="p">)</span>
</span><span class='line'>  <span class="vi">@language</span>   <span class="o">||=</span> <span class="vi">@portal</span><span class="o">.</span><span class="n">default_language</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  I18n.locale = @language.two_code</span>
</span><span class='line'><span class="sr">  @inactive_languages = @portal.languages_except_by(@language.uuid)</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<ul>
<li><code>Polymorphism</code> + <code>Factory pattern</code></li>
</ul>


<p>I recommend you read the book from <strong>Martin Fowler, Improving the Design of Existing Code</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Principles in Refactoring]]></title>
    <link href="http://chamnap.github.com/blog/2009/09/05/principles-in-refactoring/"/>
    <updated>2009-09-05T11:33:00+07:00</updated>
    <id>http://chamnap.github.com/blog/2009/09/05/principles-in-refactoring</id>
    <content type="html"><![CDATA[<p>This week, in my office we did a study group, and vorleak and I were moderators in that session. We studied the book from <strong>Refactoring the Existing Code by Martin Fowler</strong>. Here is the slide I prepared.</p>

<div style="width:425px" id="__ss_1961578"> <strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/cchamnap/principles-in-refactoring" title="Principles in Refactoring" target="_blank">Principles in Refactoring</a></strong> <iframe src="http://www.slideshare.net/slideshow/embed_code/1961578" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" allowfullscreen></iframe> <div style="padding:5px 0 12px"> View more <a href="http://www.slideshare.net/thecroaker/death-by-powerpoint" target="_blank">PowerPoint</a> from <a href="http://www.slideshare.net/cchamnap" target="_blank">Chamnap Chhorn</a> </div> </div>

]]></content>
  </entry>
  
</feed>
